package cz.fel.cvut.omo.creature.person;

import cz.fel.cvut.omo.activities.Activity;
import cz.fel.cvut.omo.activities.Fix;
import cz.fel.cvut.omo.creature.Creature;
import cz.fel.cvut.omo.events.BrokenApplianceEvent;
import cz.fel.cvut.omo.events.Event;
import cz.fel.cvut.omo.observer.Observer;
import lombok.Getter;
import lombok.Setter;

import java.io.IOException;
import java.util.List;

/**
 * Class representing a Human being inside the simulation
 */
@Getter
@Setter
public class Person extends Creature implements Observer {

     private String firstName;

     private String lastName;

     private PersonType type;

     public Person(PersonType type) {
          this.type = type;
     }

     //represents fifo queue of activities which should person do on free time
     //as reaction to events generated by Room
     private List<Activity> todoActivities;

     public void addTodoActivity(Activity activity) {
          todoActivities.add(activity);
     }

     public Activity getFirstTodoActivity() {
          if (todoActivities.isEmpty())
               return null;
          return todoActivities.remove(0);
     }

     @Override
     public void update(Event event) throws IOException {
          reactToEvent(event);
          logEvent(event);
     }

     @Override
     public void reactToEvent(Event event) {
          if (event instanceof BrokenApplianceEvent){
               todoActivities.add(new Fix(this,
                     ((BrokenApplianceEvent) event).getAppliance()));
          }
     }

     @Override
     public void logEvent(Event event) throws IOException {
          //todo
     }
}
